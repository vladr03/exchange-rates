public class JSON2Apex {
    
    public class Rates {
        public Double AED {get;set;} 
        public Double AFN {get;set;} 
        public Double ALL {get;set;} 
        public Double AMD {get;set;} 
        public Double ANG {get;set;} 
        public Double AOA {get;set;} 
        public Double ARS {get;set;} 
        public Double AUD {get;set;} 
        public Double AWG {get;set;} 
        public Double AZN {get;set;} 
        public Double BAM {get;set;} 
        public Double BBD {get;set;} 
        public Double BDT {get;set;} 
        public Double BGN {get;set;} 
        public Double BHD {get;set;} 
        public Double BIF {get;set;} 
        public Double BMD {get;set;} 
        public Double BND {get;set;} 
        public Double BOB {get;set;} 
        public Double BRL {get;set;} 
        public Double BSD {get;set;} 
        public Double BTC {get;set;} 
        public Double BTN {get;set;} 
        public Double BWP {get;set;} 
        public Double BYN {get;set;} 
        public Double BZD {get;set;} 
        public Double CAD {get;set;} 
        public Double CDF {get;set;} 
        public Double CHF {get;set;} 
        public Double CLF {get;set;} 
        public Double CLP {get;set;} 
        public Double CNH {get;set;} 
        public Double CNY {get;set;} 
        public Double COP {get;set;} 
        public Double CRC {get;set;} 
        public Double CUC {get;set;} 
        public Double CUP {get;set;} 
        public Double CVE {get;set;} 
        public Double CZK {get;set;} 
        public Double DJF {get;set;} 
        public Double DKK {get;set;} 
        public Double DOP {get;set;} 
        public Double DZD {get;set;} 
        public Double EGP {get;set;} 
        public Double ERN {get;set;} 
        public Double ETB {get;set;} 
        public Integer EUR {get;set;} 
        public Double FJD {get;set;} 
        public Double FKP {get;set;} 
        public Double GBP {get;set;} 
        public Double GEL {get;set;} 
        public Double GGP {get;set;} 
        public Double GHS {get;set;} 
        public Double GIP {get;set;} 
        public Double GMD {get;set;} 
        public Double GNF {get;set;} 
        public Double GTQ {get;set;} 
        public Double GYD {get;set;} 
        public Double HKD {get;set;} 
        public Double HNL {get;set;} 
        public Double HRK {get;set;} 
        public Double HTG {get;set;} 
        public Double HUF {get;set;} 
        public Double IDR {get;set;} 
        public Double ILS {get;set;} 
        public Double IMP {get;set;} 
        public Double INR {get;set;} 
        public Double IQD {get;set;} 
        public Double IRR {get;set;} 
        public Double ISK {get;set;} 
        public Double JEP {get;set;} 
        public Double JMD {get;set;} 
        public Double JOD {get;set;} 
        public Double JPY {get;set;} 
        public Double KES {get;set;} 
        public Double KGS {get;set;} 
        public Double KHR {get;set;} 
        public Double KMF {get;set;} 
        public Double KPW {get;set;} 
        public Double KRW {get;set;} 
        public Double KWD {get;set;} 
        public Double KYD {get;set;} 
        public Double KZT {get;set;} 
        public Double LAK {get;set;} 
        public Double LBP {get;set;} 
        public Double LKR {get;set;} 
        public Double LRD {get;set;} 
        public Double LSL {get;set;} 
        public Double LYD {get;set;} 
        public Double MAD {get;set;} 
        public Double MDL {get;set;} 
        public Double MGA {get;set;} 
        public Double MKD {get;set;} 
        public Double MMK {get;set;} 
        public Double MNT {get;set;} 
        public Double MOP {get;set;} 
        public Double MRU {get;set;} 
        public Double MUR {get;set;} 
        public Double MVR {get;set;} 
        public Double MWK {get;set;} 
        public Double MXN {get;set;} 
        public Double MYR {get;set;} 
        public Double MZN {get;set;} 
        public Double NAD {get;set;} 
        public Double NGN {get;set;} 
        public Double NIO {get;set;} 
        public Double NOK {get;set;} 
        public Double NPR {get;set;} 
        public Double NZD {get;set;} 
        public Double OMR {get;set;} 
        public Double PAB {get;set;} 
        public Double PEN {get;set;} 
        public Double PGK {get;set;} 
        public Double PHP {get;set;} 
        public Double PKR {get;set;} 
        public Double PLN {get;set;} 
        public Double PYG {get;set;} 
        public Double QAR {get;set;} 
        public Double RON {get;set;} 
        public Double RSD {get;set;} 
        public Double RUB {get;set;} 
        public Double RWF {get;set;} 
        public Double SAR {get;set;} 
        public Double SBD {get;set;} 
        public Double SCR {get;set;} 
        public Double SDG {get;set;} 
        public Double SEK {get;set;} 
        public Double SGD {get;set;} 
        public Double SHP {get;set;} 
        public Double SLL {get;set;} 
        public Double SOS {get;set;} 
        public Double SRD {get;set;} 
        public Double SSP {get;set;} 
        public Double STD {get;set;} 
        public Double STN {get;set;} 
        public Double SVC {get;set;} 
        public Double SYP {get;set;} 
        public Double SZL {get;set;} 
        public Double THB {get;set;} 
        public Double TJS {get;set;} 
        public Double TMT {get;set;} 
        public Double TND {get;set;} 
        public Double TOP {get;set;} 
        public Double TRY_Z {get;set;} // in json: TRY
        public Double TTD {get;set;} 
        public Double TWD {get;set;} 
        public Double TZS {get;set;} 
        public Double UAH {get;set;} 
        public Double UGX {get;set;} 
        public Double USD {get;set;} 
        public Double UYU {get;set;} 
        public Double UZS {get;set;} 
        public Double VES {get;set;} 
        public Double VND {get;set;} 
        public Double VUV {get;set;} 
        public Double WST {get;set;} 
        public Double XAF {get;set;} 
        public Double XAG {get;set;} 
        public Double XAU {get;set;} 
        public Double XCD {get;set;} 
        public Double XDR {get;set;} 
        public Double XOF {get;set;} 
        public Double XPD {get;set;} 
        public Double XPF {get;set;} 
        public Double XPT {get;set;} 
        public Double YER {get;set;} 
        public Double ZAR {get;set;} 
        public Double ZMW {get;set;} 
        public Double ZWL {get;set;} 
        
        public Rates(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'AED') {
                            AED = parser.getDoubleValue();
                        } else if (text == 'AFN') {
                            AFN = parser.getDoubleValue();
                        } else if (text == 'ALL') {
                            ALL = parser.getDoubleValue();
                        } else if (text == 'AMD') {
                            AMD = parser.getDoubleValue();
                        } else if (text == 'ANG') {
                            ANG = parser.getDoubleValue();
                        } else if (text == 'AOA') {
                            AOA = parser.getDoubleValue();
                        } else if (text == 'ARS') {
                            ARS = parser.getDoubleValue();
                        } else if (text == 'AUD') {
                            AUD = parser.getDoubleValue();
                        } else if (text == 'AWG') {
                            AWG = parser.getDoubleValue();
                        } else if (text == 'AZN') {
                            AZN = parser.getDoubleValue();
                        } else if (text == 'BAM') {
                            BAM = parser.getDoubleValue();
                        } else if (text == 'BBD') {
                            BBD = parser.getDoubleValue();
                        } else if (text == 'BDT') {
                            BDT = parser.getDoubleValue();
                        } else if (text == 'BGN') {
                            BGN = parser.getDoubleValue();
                        } else if (text == 'BHD') {
                            BHD = parser.getDoubleValue();
                        } else if (text == 'BIF') {
                            BIF = parser.getDoubleValue();
                        } else if (text == 'BMD') {
                            BMD = parser.getDoubleValue();
                        } else if (text == 'BND') {
                            BND = parser.getDoubleValue();
                        } else if (text == 'BOB') {
                            BOB = parser.getDoubleValue();
                        } else if (text == 'BRL') {
                            BRL = parser.getDoubleValue();
                        } else if (text == 'BSD') {
                            BSD = parser.getDoubleValue();
                        } else if (text == 'BTC') {
                            BTC = parser.getDoubleValue();
                        } else if (text == 'BTN') {
                            BTN = parser.getDoubleValue();
                        } else if (text == 'BWP') {
                            BWP = parser.getDoubleValue();
                        } else if (text == 'BYN') {
                            BYN = parser.getDoubleValue();
                        } else if (text == 'BZD') {
                            BZD = parser.getDoubleValue();
                        } else if (text == 'CAD') {
                            CAD = parser.getDoubleValue();
                        } else if (text == 'CDF') {
                            CDF = parser.getDoubleValue();
                        } else if (text == 'CHF') {
                            CHF = parser.getDoubleValue();
                        } else if (text == 'CLF') {
                            CLF = parser.getDoubleValue();
                        } else if (text == 'CLP') {
                            CLP = parser.getDoubleValue();
                        } else if (text == 'CNH') {
                            CNH = parser.getDoubleValue();
                        } else if (text == 'CNY') {
                            CNY = parser.getDoubleValue();
                        } else if (text == 'COP') {
                            COP = parser.getDoubleValue();
                        } else if (text == 'CRC') {
                            CRC = parser.getDoubleValue();
                        } else if (text == 'CUC') {
                            CUC = parser.getDoubleValue();
                        } else if (text == 'CUP') {
                            CUP = parser.getDoubleValue();
                        } else if (text == 'CVE') {
                            CVE = parser.getDoubleValue();
                        } else if (text == 'CZK') {
                            CZK = parser.getDoubleValue();
                        } else if (text == 'DJF') {
                            DJF = parser.getDoubleValue();
                        } else if (text == 'DKK') {
                            DKK = parser.getDoubleValue();
                        } else if (text == 'DOP') {
                            DOP = parser.getDoubleValue();
                        } else if (text == 'DZD') {
                            DZD = parser.getDoubleValue();
                        } else if (text == 'EGP') {
                            EGP = parser.getDoubleValue();
                        } else if (text == 'ERN') {
                            ERN = parser.getDoubleValue();
                        } else if (text == 'ETB') {
                            ETB = parser.getDoubleValue();
                        } else if (text == 'EUR') {
                            EUR = parser.getIntegerValue();
                        } else if (text == 'FJD') {
                            FJD = parser.getDoubleValue();
                        } else if (text == 'FKP') {
                            FKP = parser.getDoubleValue();
                        } else if (text == 'GBP') {
                            GBP = parser.getDoubleValue();
                        } else if (text == 'GEL') {
                            GEL = parser.getDoubleValue();
                        } else if (text == 'GGP') {
                            GGP = parser.getDoubleValue();
                        } else if (text == 'GHS') {
                            GHS = parser.getDoubleValue();
                        } else if (text == 'GIP') {
                            GIP = parser.getDoubleValue();
                        } else if (text == 'GMD') {
                            GMD = parser.getDoubleValue();
                        } else if (text == 'GNF') {
                            GNF = parser.getDoubleValue();
                        } else if (text == 'GTQ') {
                            GTQ = parser.getDoubleValue();
                        } else if (text == 'GYD') {
                            GYD = parser.getDoubleValue();
                        } else if (text == 'HKD') {
                            HKD = parser.getDoubleValue();
                        } else if (text == 'HNL') {
                            HNL = parser.getDoubleValue();
                        } else if (text == 'HRK') {
                            HRK = parser.getDoubleValue();
                        } else if (text == 'HTG') {
                            HTG = parser.getDoubleValue();
                        } else if (text == 'HUF') {
                            HUF = parser.getDoubleValue();
                        } else if (text == 'IDR') {
                            IDR = parser.getDoubleValue();
                        } else if (text == 'ILS') {
                            ILS = parser.getDoubleValue();
                        } else if (text == 'IMP') {
                            IMP = parser.getDoubleValue();
                        } else if (text == 'INR') {
                            INR = parser.getDoubleValue();
                        } else if (text == 'IQD') {
                            IQD = parser.getDoubleValue();
                        } else if (text == 'IRR') {
                            IRR = parser.getDoubleValue();
                        } else if (text == 'ISK') {
                            ISK = parser.getDoubleValue();
                        } else if (text == 'JEP') {
                            JEP = parser.getDoubleValue();
                        } else if (text == 'JMD') {
                            JMD = parser.getDoubleValue();
                        } else if (text == 'JOD') {
                            JOD = parser.getDoubleValue();
                        } else if (text == 'JPY') {
                            JPY = parser.getDoubleValue();
                        } else if (text == 'KES') {
                            KES = parser.getDoubleValue();
                        } else if (text == 'KGS') {
                            KGS = parser.getDoubleValue();
                        } else if (text == 'KHR') {
                            KHR = parser.getDoubleValue();
                        } else if (text == 'KMF') {
                            KMF = parser.getDoubleValue();
                        } else if (text == 'KPW') {
                            KPW = parser.getDoubleValue();
                        } else if (text == 'KRW') {
                            KRW = parser.getDoubleValue();
                        } else if (text == 'KWD') {
                            KWD = parser.getDoubleValue();
                        } else if (text == 'KYD') {
                            KYD = parser.getDoubleValue();
                        } else if (text == 'KZT') {
                            KZT = parser.getDoubleValue();
                        } else if (text == 'LAK') {
                            LAK = parser.getDoubleValue();
                        } else if (text == 'LBP') {
                            LBP = parser.getDoubleValue();
                        } else if (text == 'LKR') {
                            LKR = parser.getDoubleValue();
                        } else if (text == 'LRD') {
                            LRD = parser.getDoubleValue();
                        } else if (text == 'LSL') {
                            LSL = parser.getDoubleValue();
                        } else if (text == 'LYD') {
                            LYD = parser.getDoubleValue();
                        } else if (text == 'MAD') {
                            MAD = parser.getDoubleValue();
                        } else if (text == 'MDL') {
                            MDL = parser.getDoubleValue();
                        } else if (text == 'MGA') {
                            MGA = parser.getDoubleValue();
                        } else if (text == 'MKD') {
                            MKD = parser.getDoubleValue();
                        } else if (text == 'MMK') {
                            MMK = parser.getDoubleValue();
                        } else if (text == 'MNT') {
                            MNT = parser.getDoubleValue();
                        } else if (text == 'MOP') {
                            MOP = parser.getDoubleValue();
                        } else if (text == 'MRU') {
                            MRU = parser.getDoubleValue();
                        } else if (text == 'MUR') {
                            MUR = parser.getDoubleValue();
                        } else if (text == 'MVR') {
                            MVR = parser.getDoubleValue();
                        } else if (text == 'MWK') {
                            MWK = parser.getDoubleValue();
                        } else if (text == 'MXN') {
                            MXN = parser.getDoubleValue();
                        } else if (text == 'MYR') {
                            MYR = parser.getDoubleValue();
                        } else if (text == 'MZN') {
                            MZN = parser.getDoubleValue();
                        } else if (text == 'NAD') {
                            NAD = parser.getDoubleValue();
                        } else if (text == 'NGN') {
                            NGN = parser.getDoubleValue();
                        } else if (text == 'NIO') {
                            NIO = parser.getDoubleValue();
                        } else if (text == 'NOK') {
                            NOK = parser.getDoubleValue();
                        } else if (text == 'NPR') {
                            NPR = parser.getDoubleValue();
                        } else if (text == 'NZD') {
                            NZD = parser.getDoubleValue();
                        } else if (text == 'OMR') {
                            OMR = parser.getDoubleValue();
                        } else if (text == 'PAB') {
                            PAB = parser.getDoubleValue();
                        } else if (text == 'PEN') {
                            PEN = parser.getDoubleValue();
                        } else if (text == 'PGK') {
                            PGK = parser.getDoubleValue();
                        } else if (text == 'PHP') {
                            PHP = parser.getDoubleValue();
                        } else if (text == 'PKR') {
                            PKR = parser.getDoubleValue();
                        } else if (text == 'PLN') {
                            PLN = parser.getDoubleValue();
                        } else if (text == 'PYG') {
                            PYG = parser.getDoubleValue();
                        } else if (text == 'QAR') {
                            QAR = parser.getDoubleValue();
                        } else if (text == 'RON') {
                            RON = parser.getDoubleValue();
                        } else if (text == 'RSD') {
                            RSD = parser.getDoubleValue();
                        } else if (text == 'RUB') {
                            RUB = parser.getDoubleValue();
                        } else if (text == 'RWF') {
                            RWF = parser.getDoubleValue();
                        } else if (text == 'SAR') {
                            SAR = parser.getDoubleValue();
                        } else if (text == 'SBD') {
                            SBD = parser.getDoubleValue();
                        } else if (text == 'SCR') {
                            SCR = parser.getDoubleValue();
                        } else if (text == 'SDG') {
                            SDG = parser.getDoubleValue();
                        } else if (text == 'SEK') {
                            SEK = parser.getDoubleValue();
                        } else if (text == 'SGD') {
                            SGD = parser.getDoubleValue();
                        } else if (text == 'SHP') {
                            SHP = parser.getDoubleValue();
                        } else if (text == 'SLL') {
                            SLL = parser.getDoubleValue();
                        } else if (text == 'SOS') {
                            SOS = parser.getDoubleValue();
                        } else if (text == 'SRD') {
                            SRD = parser.getDoubleValue();
                        } else if (text == 'SSP') {
                            SSP = parser.getDoubleValue();
                        } else if (text == 'STD') {
                            STD = parser.getDoubleValue();
                        } else if (text == 'STN') {
                            STN = parser.getDoubleValue();
                        } else if (text == 'SVC') {
                            SVC = parser.getDoubleValue();
                        } else if (text == 'SYP') {
                            SYP = parser.getDoubleValue();
                        } else if (text == 'SZL') {
                            SZL = parser.getDoubleValue();
                        } else if (text == 'THB') {
                            THB = parser.getDoubleValue();
                        } else if (text == 'TJS') {
                            TJS = parser.getDoubleValue();
                        } else if (text == 'TMT') {
                            TMT = parser.getDoubleValue();
                        } else if (text == 'TND') {
                            TND = parser.getDoubleValue();
                        } else if (text == 'TOP') {
                            TOP = parser.getDoubleValue();
                        } else if (text == 'TRY') {
                            TRY_Z = parser.getDoubleValue();
                        } else if (text == 'TTD') {
                            TTD = parser.getDoubleValue();
                        } else if (text == 'TWD') {
                            TWD = parser.getDoubleValue();
                        } else if (text == 'TZS') {
                            TZS = parser.getDoubleValue();
                        } else if (text == 'UAH') {
                            UAH = parser.getDoubleValue();
                        } else if (text == 'UGX') {
                            UGX = parser.getDoubleValue();
                        } else if (text == 'USD') {
                            USD = parser.getDoubleValue();
                        } else if (text == 'UYU') {
                            UYU = parser.getDoubleValue();
                        } else if (text == 'UZS') {
                            UZS = parser.getDoubleValue();
                        } else if (text == 'VES') {
                            VES = parser.getDoubleValue();
                        } else if (text == 'VND') {
                            VND = parser.getDoubleValue();
                        } else if (text == 'VUV') {
                            VUV = parser.getDoubleValue();
                        } else if (text == 'WST') {
                            WST = parser.getDoubleValue();
                        } else if (text == 'XAF') {
                            XAF = parser.getDoubleValue();
                        } else if (text == 'XAG') {
                            XAG = parser.getDoubleValue();
                        } else if (text == 'XAU') {
                            XAU = parser.getDoubleValue();
                        } else if (text == 'XCD') {
                            XCD = parser.getDoubleValue();
                        } else if (text == 'XDR') {
                            XDR = parser.getDoubleValue();
                        } else if (text == 'XOF') {
                            XOF = parser.getDoubleValue();
                        } else if (text == 'XPD') {
                            XPD = parser.getDoubleValue();
                        } else if (text == 'XPF') {
                            XPF = parser.getDoubleValue();
                        } else if (text == 'XPT') {
                            XPT = parser.getDoubleValue();
                        } else if (text == 'YER') {
                            YER = parser.getDoubleValue();
                        } else if (text == 'ZAR') {
                            ZAR = parser.getDoubleValue();
                        } else if (text == 'ZMW') {
                            ZMW = parser.getDoubleValue();
                        } else if (text == 'ZWL') {
                            ZWL = parser.getDoubleValue();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Rates consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    public Motd motd {get;set;} 
    public Boolean success {get;set;} 
    public String base {get;set;} 
    public Date date_X {get;set;} // in json: date
    public Rates rates {get;set;} 
    
    public JSON2Apex(JSONParser parser) {
        while (parser.nextToken() != System.JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                    if (text == 'motd') {
                        motd = new Motd(parser);
                    } else if (text == 'success') {
                        success = parser.getBooleanValue();
                    } else if (text == 'base') {
                        base = parser.getText();
                    } else if (text == 'date') {
                        date_X = parser.getDateValue();
                    } else if (text == 'rates') {
                        rates = new Rates(parser);
                    } else {
                        System.debug(LoggingLevel.WARN, 'JSON2Apex consuming unrecognized property: '+text);
                        consumeObject(parser);
                    }
                }
            }
        }
    }
    
    public class Motd {
        public String msg {get;set;} 
        public String url {get;set;} 
        
        public Motd(JSONParser parser) {
            while (parser.nextToken() != System.JSONToken.END_OBJECT) {
                if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                    String text = parser.getText();
                    if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                        if (text == 'msg') {
                            msg = parser.getText();
                        } else if (text == 'url') {
                            url = parser.getText();
                        } else {
                            System.debug(LoggingLevel.WARN, 'Motd consuming unrecognized property: '+text);
                            consumeObject(parser);
                        }
                    }
                }
            }
        }
    }
    
    
    public static JSON2Apex parse(String json) {
        System.JSONParser parser = System.JSON.createParser(json);
        return new JSON2Apex(parser);
    }
    
    public static void consumeObject(System.JSONParser parser) {
        Integer depth = 0;
        do {
            System.JSONToken curr = parser.getCurrentToken();
            if (curr == System.JSONToken.START_OBJECT || 
                curr == System.JSONToken.START_ARRAY) {
                    depth++;
                } else if (curr == System.JSONToken.END_OBJECT ||
                           curr == System.JSONToken.END_ARRAY) {
                               depth--;
                           }
        } while (depth > 0 && parser.nextToken() != null);
    }
}